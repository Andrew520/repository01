{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","onLoad","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","gainScore","destroy","start","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACP;AACAC,oBAAY;AAFL,KAHP;;AAQJC,UARI,oBAQM,CAAE,CARR;;;AAUDC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,eAAOJ,IAAP;AACH,KAhBA;;AAkBDK,cAAU,oBAAW;AACjB;AACA,aAAKR,IAAL,CAAUS,YAAV;AACA;AACA,aAAKT,IAAL,CAAUU,SAAV;AACA;AACA,aAAKN,IAAL,CAAUO,OAAV;AACH,KAzBA;;AA4BLC,SA5BK,mBA4BI,CAAE,CA5BN;;;AA8BL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAKhB,iBAAL,KAA2B,KAAKF,UAApC,EAAgD;AAC5C;AACA,iBAAKY,QAAL;AACA;AACH;AACD;AACA,YAAIO,eAAe,IAAI,KAAKf,IAAL,CAAUgB,KAAV,GAAgB,KAAKhB,IAAL,CAAUiB,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKd,IAAL,CAAUe,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACH;;AA1CI,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n         // 星星和主角之间的距离小于这个数值时，就会完成收集\r\n         pickRadius: 0,\r\n    },\r\n\r\n     onLoad () {},\r\n\r\n        getPlayerDistance: function () {\r\n            // 根据 player 节点位置判断距离\r\n            var playerPos = this.game.player.getPosition();\r\n            // 根据两点位置计算两点之间距离\r\n            var dist = this.node.position.sub(playerPos).mag();\r\n            return dist;\r\n        },\r\n    \r\n        onPicked: function() {\r\n            // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n            this.game.spawnNewStar();\r\n            // 调用Game脚本的得分方法\r\n            this.game.gainScore();\r\n            // 然后销毁当前星星节点\r\n            this.node.destroy();\r\n        },\r\n\r\n     \r\n    start () {},\r\n\r\n    // update (dt) {},\r\n    update: function (dt) {\r\n        // 每帧判断和主角之间的距离是否小于收集距离\r\n        if (this.getPlayerDistance() < this.pickRadius) {\r\n            // 调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n        // 根据 Game 脚本中的计时器更新星星的透明度\r\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n    },\r\n\r\n});\r\n"]}