{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","onLoad","groundY","y","height","time","starDuration","spawnNewStar","score","isGameOver","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","timer","randX","randY","jumpHeight","maxX","width","v2","start","GoBack","log","director","loadScene","update","dt","gameover","gameOver","gainScore","string","toString","audioEngine","playEffect","stopAllActions","scoreArr","scoreJson","sys","localStorage","getItem","JSON","parse","error","length","splice","date","Date","newdate","toLocaleString","hour12","push","setItem","stringify"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGL;AACA;AACAC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;AAMR;AACAC,yBAAiB,CAPT;AAQRC,yBAAiB,CART;AASR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAVA;AAcR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAfA;AAmBR;AACAE,sBAAc;AACVR,qBAAS,IADC;AAEVC,kBAAMP,GAAGe;AAFC,SApBN;AAwBR;AACAC,oBAAY;AACRV,qBAAS,IADD;AAERC,kBAAMP,GAAGiB;AAFD;AAzBJ,KALP;;AAoCLC,YAAQ,kBAAY;AAChB;AACA,aAAKC,OAAL,GAAe,KAAKR,MAAL,CAAYS,CAAZ,GAAgB,KAAKT,MAAL,CAAYU,MAAZ,GAAmB,CAAlD;AACA;AACA,aAAKC,IAAL,GAAY,CAAZ;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA;AACA,aAAKC,YAAL;AACA;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,UAAL,GAAkB,KAAlB;AACH,KA/CI;;AAiDLF,kBAAc,wBAAW;AACrB;AACA,YAAIG,UAAU3B,GAAG4B,WAAH,CAAe,KAAKvB,UAApB,CAAd;AACA;AACA,aAAKwB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACA;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACA;AACA,aAAKX,YAAL,GAAoB,KAAKb,eAAL,GAAuByB,KAAKC,MAAL,MAAiB,KAAK3B,eAAL,GAAuB,KAAKC,eAA7C,CAA3C;AACA,aAAK2B,KAAL,GAAa,CAAb;AACH,KA7DI;;AA+DLL,wBAAoB,8BAAY;AAC5B,YAAIM,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKpB,OAAL,GAAegB,KAAKC,MAAL,KAAgB,KAAKvB,MAAL,CAAYoB,YAAZ,CAAyB,QAAzB,EAAmCO,UAAlE,GAA+E,EAA3F;AACA;AACA,YAAIC,OAAO,KAAKZ,IAAL,CAAUa,KAAV,GAAgB,CAA3B;AACAJ,gBAAQ,CAACH,KAAKC,MAAL,KAAgB,GAAjB,IAAwB,CAAxB,GAA4BK,IAApC;AACA;AACA,eAAOzC,GAAG2C,EAAH,CAAML,KAAN,EAAaC,KAAb,CAAP;AACH,KAxEI;;AA0ELK,SA1EK,mBA0EI,CAER,CA5EI;;;AA8ELC,YAAO,kBAAU;AACb7C,WAAG8C,GAAH,CAAO,QAAP;AACA9C,WAAG+C,QAAH,CAAYC,SAAZ,CAAsB,OAAtB;AACH,KAjFI;;AAmFLC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,CAAC,KAAKC,QAAN,IAAkB,KAAKd,KAAL,GAAa,KAAKd,YAAxC,EAAsD;AAClD,iBAAKG,UAAL,GAAkB,IAAlB;AACA,iBAAK0B,QAAL;AACA;AACH;AACD,aAAKf,KAAL,IAAca,EAAd;AACH,KA3FI;;AA6FLG,eAAW,qBAAW;AAClB,aAAK5B,KAAL,IAAc,CAAd;AACA;AACA,aAAKX,YAAL,CAAkBwC,MAAlB,GAA2B,WAAW,KAAK7B,KAAL,CAAW8B,QAAX,EAAtC;AACA;AACAvD,WAAGwD,WAAH,CAAeC,UAAf,CAA0B,KAAKzC,UAA/B,EAA2C,KAA3C;AACH,KAnGI;;AAqGLoC,cAAU,oBAAY;AAClB;AACA,aAAKvC,MAAL,CAAY6C,cAAZ;AACA1D,WAAG+C,QAAH,CAAYC,SAAZ,CAAsB,OAAtB;;AAEAhD,WAAG8C,GAAH,CAAO,mBAAP,EAA2Ba,QAA3B;;AAEA,YAAIC,YAAY5D,GAAG6D,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAhB;;AAEA,YAAIJ,iBAAJ;AACA,YAAI;AACAA,uBAAWK,KAAKC,KAAL,CAAWL,SAAX,CAAX;AACH,SAFD,CAEE,OAAOM,KAAP,EAAc,CAEf;AACD,YAAG,CAACP,QAAJ,EAAa;AACTA,uBAAW,EAAX;AACH;;AAED;AACA,YAAGA,SAASQ,MAAT,GAAkB,EAArB,EACA;AACIR,qBAASS,MAAT,CAAgB,CAAhB,EAAkBT,SAASQ,MAAT,GAAkB,CAApC;AACH;;AAED;AACA,YAAKE,OAAK,IAAIC,IAAJ,EAAV;AACA,YAAKC,UAAQF,KAAKG,cAAL,CAAoB,SAApB,EAA+B,EAAEC,QAAQ,KAAV,EAA/B,CAAb;;AAEAd,iBAASe,IAAT,CAAc,EAACjD,OAAM,KAAKA,KAAZ,EAAkBH,MAAKiD,OAAvB,EAAd;;AAEAvE,WAAG8C,GAAH,CAAO,aAAP,EAAqBa,QAArB;;AAEA3D,WAAG6D,GAAH,CAAOC,YAAP,CAAoBa,OAApB,CAA4B,UAA5B,EAAwCX,KAAKY,SAAL,CAAejB,QAAf,CAAxC;AACH;;AAvII,CAAT","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    //一个节点具有的属性都需要写在 properties 代码块中，这些属性将规定主角的移动方式，\r\n    //在代码中我们不需要关心这些数值是多少，因为我们之后会直接在属性检查器中设置这些数值\r\n    properties: {\r\n        // 这个属性引用了星星预制资源\r\n        starPrefab: {                                                       \r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //score lable的引用\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        //得分音效资源\r\n        scoreAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n    },\r\n\r\n    onLoad: function () {\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n        //初始化计时器\r\n        this.time = 0;\r\n        this.starDuration = 0;\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n        //初始化计分\r\n        this.score = 0;\r\n        this.isGameOver = false;\r\n    },\r\n\r\n    spawnNewStar: function() {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        // 在星星组件上暂存 Game 对象的引用\r\n        newStar.getComponent('Star').game = this;\r\n        // 重置计时器，根据消失时间范围随机取一个值\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n        // 返回星星坐标\r\n        return cc.v2(randX, randY);\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    GoBack:function(){\r\n        cc.log(\"GoBack\");\r\n        cc.director.loadScene('start');\r\n    },\r\n\r\n    update: function (dt) {\r\n        // 每帧更新计时器，超过限度还没有生成新的星星就会调用游戏失败逻辑\r\n        if (!this.gameover && this.timer > this.starDuration) {\r\n            this.isGameOver = true\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n\r\n    gainScore: function (){\r\n        this.score += 1;\r\n        //更新scoreDisplay Lable 的文字\r\n        this.scoreDisplay.string = 'Score:' + this.score.toString();\r\n        //播放得分音效\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n\r\n    gameOver: function () {\r\n        //停止player节点的跳跃动作\r\n        this.player.stopAllActions(); \r\n        cc.director.loadScene('start');\r\n\r\n        cc.log(\"scoreArr-gameover\",scoreArr)\r\n       \r\n        let scoreJson = cc.sys.localStorage.getItem('scoreArr');\r\n        \r\n        let scoreArr\r\n        try {\r\n            scoreArr = JSON.parse(scoreJson)\r\n        } catch (error) {\r\n            \r\n        }\r\n        if(!scoreArr){\r\n            scoreArr = []\r\n        }\r\n\r\n        //显示十一条历史记录\r\n        if(scoreArr.length > 10)\r\n        {\r\n            scoreArr.splice(0,scoreArr.length - 9)\r\n        }\r\n\r\n        //截取当前时间\r\n        let  date=new Date();\r\n        let  newdate=date.toLocaleString('chinese', { hour12: false }); \r\n\r\n        scoreArr.push({score:this.score,time:newdate});\r\n\r\n        cc.log(\"scoreArr000\",scoreArr)\r\n\r\n        cc.sys.localStorage.setItem('scoreArr', JSON.stringify(scoreArr));\r\n    }\r\n\r\n});\r\n"]}