{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","jumpAction","node","runAction","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestroy","off","start","update","dt","Math","abs","x","parent","width"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n       //主角跳跃高度\r\n       jumpHeight: 0,\r\n       //主角跳跃持续时间\r\n       jumpDuration: 0,\r\n       //最大移动速度\r\n       maxMoveSpeed: 0,\r\n       //加速度\r\n       accel: 0,\r\n       //跳跃音效资源\r\n       jumpAudio: {\r\n           default: null,\r\n           type: cc.AudioClip\r\n       },\r\n    },\r\n\r\n    \r\n    setJumpAction: function() {\r\n        //跳跃上升,在jumpDuration的时间内，移动到当前节点的(0,this.jumpHeight)的位置坐标，\r\n        var jumpUp = cc.moveBy(this.jumpDuration,cc.v2(0,this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        //下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration,cc.v2(0,-this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        //添加一个回调函数，用于在动作结束时调用我们定义的其他方法\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        //不断重复，而且每次完成落地动作后调用回调来播放声音\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown,callback));\r\n    },\r\n\r\n\r\n    playJumpSound: function () {\r\n        //调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n\r\n\r\n    onKeyDown(event){\r\n        //set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n            this.accLeft = true;\r\n            break;\r\n            case cc.macro.KEY.d:\r\n            this.accRight = true;\r\n            break;\r\n        }\r\n    },\r\n\r\n    onKeyUp(event){\r\n        //unset a flag when key pressed\r\n        switch(event.keyCode) {\r\n           case cc.macro.KEY.a:\r\n           this.accLeft = false;\r\n           break;\r\n           case cc.macro.KEY.d:\r\n           this.accRight = false;\r\n           break;\r\n       }\r\n    },\r\n\r\n\r\n     //onLoad 方法会在场景加载后立刻执行，所以我们会把初始化相关的操作和逻辑都放在这里面\r\n     onLoad: function() {\r\n         //初始化跳跃动作\r\n         this.jumpAction = this.setJumpAction();\r\n         this.node.runAction(this.jumpAction);\r\n\r\n         //加速度方向开关\r\n         this.accLeft = false;\r\n         this.accRight = false;\r\n         //主角当前水平方向速度\r\n         this.xSpeed = 0;\r\n\r\n         //初始化键盘输入监听, 通过systemEvent来监听系统全局事件\r\n         cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n         cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n     },\r\n\r\n\r\n     onDestroy(){\r\n         //取消键盘输入监听\r\n         cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n         cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyDown, this);\r\n     },\r\n\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n\r\n    //update 在场景加载后就会每帧调用一次，我们一般把需要经常计算或及时更新的逻辑内容放在这里\r\n    update: function (dt) {\r\n        //根据当前加速度方向每帧更新速度\r\n        if(this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n\r\n        //限制主角的速度不能超过最大值\r\n        if(Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            //if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        //根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n        \r\n        //限制怪兽的移动范围\r\n        if (this.node.x > this.node.parent.width/2) {\r\n            this.node.x = this.node.parent.width/2;\r\n            this.xSpeed = 0;\r\n        } else if (this.node.x < -this.node.parent.width/2) {\r\n            this.node.x = -this.node.parent.width/2;\r\n            this.xSpeed = 0;\r\n        }\r\n    },\r\n\r\n});"]}